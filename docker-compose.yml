# To rebuild containers, run:
#   docker-compose build
#
# To initialize the database, run:
#   docker-compose run flask db create
#
# To start me up, run:
#   docker-compose up --build
#
#
###########
#
# Here are some useful commands to clear what's already in place,
# in case one wants to start fresh.  
#
# To stop and remove ALL docker images
#    docker kill $(docker ps -a -q)
#    docker rm $(docker ps -a -q)
#
# To drop the database before building a new one, if necessary
#    docker volume rm growth-too-marshal_too-data
#    docker-compose run flask db drop --preserve user
#
# Then run again the building instructions at
# the beginning of this document.
#


version: '3.3'

secrets:
  application.cfg.d:
    file: secrets/application.cfg.d
  htpasswd:
    file: secrets/htpasswd
  netrc:
    file: secrets/netrc
  # Secrets for SSH tunnel to mountain.
  # Technically, only id-rsa needs to be secret.
  id_rsa:
    file: secrets/id_rsa
  id_rsa.pub:
    file: secrets/id_rsa.pub
  GROWTH-India.tess:
    file: secrets/input/GROWTH-India.tess
  CLU.hdf5:
    file: secrets/catalog/CLU.hdf5

volumes:
  too-data:

services:
  postgres:
    image: postgres:11
    volumes:
      - too-data:/var/lib/postgresql/data
    restart: always
  redis:
    image: redis
    restart: always
  tunnel:
    build: .
    image: growthastro/growth-too-marshal
    restart: always
    secrets:
      - id_rsa
      - id_rsa.pub
    entrypoint:
      - ssh
      - -v
      # Don't execute a command after logging in.
      - -N
      # Don't read from stdin.
      - -n
      # Listen on local port 9999, forward connections to remote port 9999.
      - -L
      - 0.0.0.0:9999:127.0.0.1:9999
      # Connect to ssh server on nonstandard port.
      - -p
      - '22220'
      # Username and host.
      - too_team@hale.palomar.caltech.edu
  flower:
    build: .
    image: growthastro/growth-too-marshal
    command: celery flower --url-prefix=flower
    depends_on:
      - redis
    restart: always
  celery:
    build: .
    image: growthastro/growth-too-marshal
    depends_on:
      - postgres
      - redis
    command: celery worker --loglevel info --concurrency 4
    environment:
      HOST_HOSTNAME: "${HOSTNAME}"
    restart: always
    secrets:
      - application.cfg.d
      - id_rsa
      - id_rsa.pub
      - CLU.hdf5
  celery_beat:
    build: .
    image: growthastro/growth-too-marshal
    depends_on:
      - redis
    command: celery beat --loglevel info
    environment:
      HOST_HOSTNAME: "${HOSTNAME}"
    restart: always
    secrets:
      - application.cfg.d
  gcn:
    build: .
    image: growthastro/growth-too-marshal
    command: gcn
    depends_on:
      - celery
      - postgres
      - redis
    environment:
      HOST_HOSTNAME: "${HOSTNAME}"
    restart: always
    secrets:
      - application.cfg.d
  flask:
    build: .
    image: growthastro/growth-too-marshal
    command: run --with-threads --host=0.0.0.0 --port 8081
    depends_on:
      - postgres
      - redis
      - tunnel
    environment:
      HOST_HOSTNAME: "${HOSTNAME}"
    restart: always
    secrets:
      - application.cfg.d
      - htpasswd
      - id_rsa
      - id_rsa.pub
      - GROWTH-India.tess
      - CLU.hdf5
  nginx:
    image: nginx
    depends_on:
      - flask
      - flower
    ports:
      - "8081:8081"
    restart: always
    secrets:
      - htpasswd
    volumes:
      - ${PWD}/docker/etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
